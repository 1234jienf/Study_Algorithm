# 문제
## 일직선으로 다양한 높이의 건물들이 N개 존재합니다. 
## 가희는 건물들의 왼쪽에, 단비는 건물들의 오른쪽에 있습니다. 
## 일직선 상에 가희와 단비, 건물들은 아래와 같은 순서로 배치되어 있습니다.

### 가희의 오른쪽에는 1번 건물이 있습니다.
### x가 1이상 N-1이하의 정수일 때, x번 건물의 오른쪽에는 x+1번 건물이 있습니다.
### N번 건물의 오른쪽에는 단비가 있습니다.

## 가희와 단비가 볼 수 있는 건물은 아래와 같습니다.

### 가희는 1번 건물을 볼 수 있습니다.
### k번 건물보다 왼쪽에 있는 건물들이 모두 k번 건물보다 높이가 낮다면, 가희는 k번 건물을 볼 수 있습니다.
### 단비는 N번 건물을 볼 수 있습니다.
### k번 건물보다 오른쪽에 있는 건물들이 모두 k번 건물보다 높이가 낮다면, 단비는 k번 건물을 볼 수 있습니다.

## 예를 들어, N이 3이고, 1번 건물의 높이가 1, 2번 건물의 높이가 3, 3번 건물의 높이가 2라고 하겠습니다.

## 가희가 볼 수 있는 건물과 단비가 볼 수 있는 건물의 수는 각각 2개입니다. 이를 각각 노란색, 연보라색으로 표시하겠습니다.

## 가희가 3번 건물을 볼 수 없는 이유는 3번 건물 왼쪽에 있는 2번 건물의 높이가 3번 건물보다 높기 때문입니다. 
## 그리고, 단비가 1번 건물을 볼 수 없는 이유는 1번 건물보다 오른쪽에 있는 2번 건물과 3번 건물이 1번 건물보다 높기 때문입니다.

## 가희와 단비 사이에 있는 건물의 개수 N과 가희가 볼 수 있는 건물의 개수 a, 단비가 볼 수 있는 건물의 개수 b가 주어집니다. 
## 사전 순으로 가장 앞서는 N개의 건물 높이 정보를 출력해 주세요.


# 입력
## 첫째 줄에 건물의 개수 N, 가희가 볼 수 있는 건물의 개수 a, 단비가 볼 수 있는 건물의 개수 b가 공백으로 구분해서 주어집니다.

# 출력
## 문제의 조건에 맞는 건물들의 높이 정보가 1개 이상 존재하는 경우 N개의 건물 높이 정보 중 사전순으로 가장 앞선 것을 출력해 주세요. 
## 출력 형식은 다음을 만족해야 합니다.

### 1번 건물, ... , N번 건물의 높이를 공백으로 구분해서 출력해 주세요. 출력하는 수들이 모두 다를 필요는 없습니다.
### 높이는 1보다 크거나 같은 정수여야 합니다.
##문제의 조건에 맞는 건물들의 높이 정보가 존재하지 않으면 첫 줄에 -1을 출력해 주세요.

N, a, b = map(int, input().split())
ans = []

# 가희가 볼 수 있는 건물 높이 추가
for i in range(1, a):
  ans.append(i)

# 가희와 단비 사이에 가장 높은 건물
max_tower = max(a, b)
ans.append(max_tower)

# 단비가 볼 수 있는 건물 높이 추가
for i in range(b - 1, 0, -1):
  ans.append(i)

# 배열이 N보다 클 경우 -1 출력
if len(ans) > N:
  print(-1)
else:
  # 배열이 N보다 작을 경우, 1을 적절한 위치에 추가
  while len(ans) < N:
    if a == 1:
      # 가희가 첫 번째 건물만 볼 수 있을 때, 1번째 인덱스에 1 추가
      ans.insert(1, 1)
    else:
      # 그렇지 않을 경우, 앞에 1 추가
      ans.insert(0, 1)
  # 완성된 배열을 출력
  print(*ans)
